{"ast":null,"code":"const API_BASE = \"http://localhost:8080/api\";\n\n// JWT helpers\nexport function setJwt(token) {\n  localStorage.setItem(\"jwt\", token);\n}\nexport function getJwt() {\n  return localStorage.getItem(\"jwt\");\n}\n\n// Public endpoints\nexport async function login(username, password) {\n  const res = await fetch(`${API_BASE}/users/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) {\n    return {\n      error: \"Login failed\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function register(name, username, password) {\n  const res = await fetch(`${API_BASE}/users/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      username,\n      password\n    })\n  });\n  if (!res.ok) {\n    return {\n      error: \"Registration failed\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\n\n// Protected endpoints (require JWT)\nfunction authHeaders() {\n  const token = getJwt();\n  return token ? {\n    \"Authorization\": \"Bearer \" + token\n  } : {};\n}\nexport async function getBooks() {\n  const res = await fetch(`${API_BASE}/books`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function searchBooks(type, keyword) {\n  const res = await fetch(`${API_BASE}/books/search?type=${type}&keyword=${keyword}`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function addBook(book) {\n  const res = await fetch(`${API_BASE}/books`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authHeaders()\n    },\n    body: JSON.stringify(book)\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function deleteBook(id) {\n  const res = await fetch(`${API_BASE}/books/${id}`, {\n    method: \"DELETE\",\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res;\n}\n\n// Add similar JWT logic for other protected endpoints as needed\n// Example for issueBook, returnBook, reserveBook, etc.\nexport async function issueBook(bookId, userId) {\n  const res = await fetch(`${API_BASE}/issues/issue?bookId=${bookId}&userId=${userId}`, {\n    method: \"POST\",\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function returnBook(issueId, finePaid = null) {\n  let url = `${API_BASE}/issues/return?issueId=${issueId}`;\n  if (finePaid !== null) {\n    url += `&finePaid=${finePaid}`;\n  }\n  const res = await fetch(url, {\n    method: \"POST\",\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function reserveBook(bookId, userId) {\n  const res = await fetch(`${API_BASE}/reservations/reserve?bookId=${bookId}&userId=${userId}`, {\n    method: \"POST\",\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function getUserIssues(userId) {\n  const res = await fetch(`${API_BASE}/issues/user/${userId}`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function getUserReservations(userId) {\n  const res = await fetch(`${API_BASE}/reservations/user/${userId}`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\n\n// Reports and analytics\nexport async function getMostIssuedBooks() {\n  try {\n    const res = await fetch(`${API_BASE}/issues/reports/mostIssued`, {\n      headers: authHeaders()\n    });\n    if (!res.ok) {\n      console.warn(`Failed to fetch popular books: ${res.status} ${res.statusText}`);\n      // Return empty array for any error\n      return [];\n    }\n    const data = await res.json();\n    return Array.isArray(data) ? data : [];\n  } catch (err) {\n    console.error(\"Error fetching popular books:\", err);\n    return [];\n  }\n}\nexport async function getUserActivityReport(userId) {\n  const res = await fetch(`${API_BASE}/issues/reports/userActivity/${userId}`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function getFinesReport() {\n  const res = await fetch(`${API_BASE}/issues/reports/fines`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\n\n// User management for admins\nexport async function getAllUsers() {\n  const res = await fetch(`${API_BASE}/users`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function updateUserRole(userId, role) {\n  const res = await fetch(`${API_BASE}/users/${userId}/role`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authHeaders()\n    },\n    body: JSON.stringify({\n      role\n    })\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function getUsersByRole(role) {\n  const res = await fetch(`${API_BASE}/users/byRole/${role}`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function deleteUser(userId) {\n  const res = await fetch(`${API_BASE}/users/${userId}`, {\n    method: \"DELETE\",\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\n\n// Issue management\nexport async function getAllIssues() {\n  const res = await fetch(`${API_BASE}/issues`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function calculateFine(issueId) {\n  try {\n    const res = await fetch(`${API_BASE}/issues/fine/${issueId}`, {\n      headers: authHeaders()\n    });\n    if (!res.ok) {\n      const errorData = await res.json().catch(() => ({\n        error: \"Unauthorized\"\n      }));\n      throw new Error(errorData.error || `Error ${res.status}: Unable to calculate fine`);\n    }\n    return res.json();\n  } catch (err) {\n    console.error(\"Error calculating fine:\", err);\n    throw err;\n  }\n}\n\n// Reservation management\nexport async function getAllReservations() {\n  const res = await fetch(`${API_BASE}/reservations`, {\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\nexport async function cancelReservation(reservationId) {\n  const res = await fetch(`${API_BASE}/reservations/${reservationId}`, {\n    method: \"DELETE\",\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}\n\n// Reservation notifications\nexport async function notifyReservation(reservationId) {\n  const res = await fetch(`${API_BASE}/reservations/notify-available/${reservationId}`, {\n    method: \"POST\",\n    headers: authHeaders()\n  });\n  if (!res.ok) {\n    return {\n      error: \"Unauthorized\",\n      status: res.status\n    };\n  }\n  return res.json();\n}","map":{"version":3,"names":["API_BASE","setJwt","token","localStorage","setItem","getJwt","getItem","login","username","password","res","fetch","method","headers","body","JSON","stringify","ok","error","status","json","register","name","authHeaders","getBooks","searchBooks","type","keyword","addBook","book","deleteBook","id","issueBook","bookId","userId","returnBook","issueId","finePaid","url","reserveBook","getUserIssues","getUserReservations","getMostIssuedBooks","console","warn","statusText","data","Array","isArray","err","getUserActivityReport","getFinesReport","getAllUsers","updateUserRole","role","getUsersByRole","deleteUser","getAllIssues","calculateFine","errorData","catch","Error","getAllReservations","cancelReservation","reservationId","notifyReservation"],"sources":["C:/Users/dedee/LMS-WEB/frontend/src/api/api.js"],"sourcesContent":["const API_BASE = \"http://localhost:8080/api\";\r\n\r\n// JWT helpers\r\nexport function setJwt(token) {\r\n  localStorage.setItem(\"jwt\", token);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n// Public endpoints\r\nexport async function login(username, password) {\r\n  const res = await fetch(`${API_BASE}/users/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ username, password }),\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Login failed\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function register(name, username, password) {\r\n  const res = await fetch(`${API_BASE}/users/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ name, username, password }),\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Registration failed\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// Protected endpoints (require JWT)\r\nfunction authHeaders() {\r\n  const token = getJwt();\r\n  return token ? { \"Authorization\": \"Bearer \" + token } : {};\r\n}\r\n\r\nexport async function getBooks() {\r\n  const res = await fetch(`${API_BASE}/books`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function searchBooks(type, keyword) {\r\n  const res = await fetch(`${API_BASE}/books/search?type=${type}&keyword=${keyword}`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function addBook(book) {\r\n  const res = await fetch(`${API_BASE}/books`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...authHeaders()\r\n    },\r\n    body: JSON.stringify(book),\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function deleteBook(id) {\r\n  const res = await fetch(`${API_BASE}/books/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res;\r\n}\r\n\r\n// Add similar JWT logic for other protected endpoints as needed\r\n// Example for issueBook, returnBook, reserveBook, etc.\r\nexport async function issueBook(bookId, userId) {\r\n  const res = await fetch(`${API_BASE}/issues/issue?bookId=${bookId}&userId=${userId}`, {\r\n    method: \"POST\",\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function returnBook(issueId, finePaid = null) {\r\n  let url = `${API_BASE}/issues/return?issueId=${issueId}`;\r\n  if (finePaid !== null) {\r\n    url += `&finePaid=${finePaid}`;\r\n  }\r\n  \r\n  const res = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function reserveBook(bookId, userId) {\r\n  const res = await fetch(`${API_BASE}/reservations/reserve?bookId=${bookId}&userId=${userId}`, {\r\n    method: \"POST\",\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function getUserIssues(userId) {\r\n  const res = await fetch(`${API_BASE}/issues/user/${userId}`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function getUserReservations(userId) {\r\n  const res = await fetch(`${API_BASE}/reservations/user/${userId}`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// Reports and analytics\r\nexport async function getMostIssuedBooks() {\r\n  try {\r\n    const res = await fetch(`${API_BASE}/issues/reports/mostIssued`, {\r\n      headers: authHeaders()\r\n    });\r\n    if (!res.ok) {\r\n      console.warn(`Failed to fetch popular books: ${res.status} ${res.statusText}`);\r\n      // Return empty array for any error\r\n      return [];\r\n    }\r\n    const data = await res.json();\r\n    return Array.isArray(data) ? data : [];\r\n  } catch (err) {\r\n    console.error(\"Error fetching popular books:\", err);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function getUserActivityReport(userId) {\r\n  const res = await fetch(`${API_BASE}/issues/reports/userActivity/${userId}`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function getFinesReport() {\r\n  const res = await fetch(`${API_BASE}/issues/reports/fines`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// User management for admins\r\nexport async function getAllUsers() {\r\n  const res = await fetch(`${API_BASE}/users`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function updateUserRole(userId, role) {\r\n  const res = await fetch(`${API_BASE}/users/${userId}/role`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...authHeaders()\r\n    },\r\n    body: JSON.stringify({ role }),\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function getUsersByRole(role) {\r\n  const res = await fetch(`${API_BASE}/users/byRole/${role}`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function deleteUser(userId) {\r\n  const res = await fetch(`${API_BASE}/users/${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// Issue management\r\nexport async function getAllIssues() {\r\n  const res = await fetch(`${API_BASE}/issues`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function calculateFine(issueId) {\r\n  try {\r\n    const res = await fetch(`${API_BASE}/issues/fine/${issueId}`, {\r\n      headers: authHeaders()\r\n    });\r\n    if (!res.ok) {\r\n      const errorData = await res.json().catch(() => ({ error: \"Unauthorized\" }));\r\n      throw new Error(errorData.error || `Error ${res.status}: Unable to calculate fine`);\r\n    }\r\n    return res.json();\r\n  } catch (err) {\r\n    console.error(\"Error calculating fine:\", err);\r\n    throw err;\r\n  }\r\n}\r\n\r\n// Reservation management\r\nexport async function getAllReservations() {\r\n  const res = await fetch(`${API_BASE}/reservations`, {\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function cancelReservation(reservationId) {\r\n  const res = await fetch(`${API_BASE}/reservations/${reservationId}`, {\r\n    method: \"DELETE\",\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// Reservation notifications\r\nexport async function notifyReservation(reservationId) {\r\n  const res = await fetch(`${API_BASE}/reservations/notify-available/${reservationId}`, {\r\n    method: \"POST\",\r\n    headers: authHeaders()\r\n  });\r\n  if (!res.ok) {\r\n    return { error: \"Unauthorized\", status: res.status };\r\n  }\r\n  return res.json();\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}